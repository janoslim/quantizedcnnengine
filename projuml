@startuml

scale 2
class IOPool {
    -io_map: std::map<int, IO*>
    +IOPool()
    +~IOPool()
    + finish_input(int id): void
    + add_IO(IO* io_obj): void
    + get_access(int id): void
}

class Network {
    -iopool: IOPool*
    - id: int
    - input_id: int
    - output_id: int
    - my_thread: std::thread*
    - child_networks: std::vector<Network*>*
    + Network(int id, int input_id, int output_id, IOPool* iopool)
	+ ~Network()
	+ forward() : void
	+ wait_thread(): void
	+ add_network(Network* network): void
}

class IO {
    - ID: int
    - key: std::mutex*
    + IO(int ID)
    + ~IO()
    + get_ID(): int
    + get_access(): void
    + ready(): void
}

IOPool *--> IO
IOPool <-- Network
@enduml